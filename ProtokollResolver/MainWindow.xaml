<Window x:Class="ProtokollResolver.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ProtokollResolver"
        xmlns:viewModels="clr-namespace:ProtokollResolver.ViewModels"
        xmlns:viewModels1="clr-namespace:CommonClasses.ViewModels;assembly=CommonClasses"
        xmlns:helper="clr-namespace:ProtokollResolver.Helper"
        mc:Ignorable="d"
        Title="Löser Oberfläche" Height="540" Width="960">
    <Window.DataContext>
        <viewModels:MainWindowViewModel />
    </Window.DataContext>
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="B2v"></BooleanToVisibilityConverter>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="5*" />
            <ColumnDefinition Width="5*" />
            <ColumnDefinition Width="2.5*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="0.1*" />
            <RowDefinition />
            <!--<RowDefinition Height="0.1*" />-->
        </Grid.RowDefinitions>
        <UniformGrid Rows="1">
            <Button Margin="1" Command="{Binding LoadTaskCommand}">Aufgaben laden</Button>
            <Button Margin="1" Command="{Binding GenerateTaskFileCommand}">Aufgaben speichern</Button>
        </UniformGrid>
        <UniformGrid Grid.Row="0" Grid.Column="1" Rows="1">
            <Button Margin="1" Command="{Binding LoadGivenProtCommand}">Protokoll laden</Button>
            <Button Margin="1" Command="{Binding SaveProtocolCommand}">Protokoll speichern</Button>
            <Button Margin="1" Command="{Binding CheckGivenProtokolCommand}">Prüfen</Button>
        </UniformGrid>

        <Grid Grid.Row="1" Grid.Column="0" >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" Margin="0 5 0 0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Label Grid.Column="0" VerticalAlignment="Center">Aufgaben Name:</Label>
                <TextBox Grid.Column="1" VerticalContentAlignment="Center" Text="{Binding CurrentConfig.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></TextBox>
            </Grid>
            <TextBlock Grid.Row="1" FontWeight="Bold" FontSize="14" Margin="5">Code</TextBlock>
            <TextBox Grid.Row="2" Margin="0 5 0 0" Text="{Binding CurrentConfig.Code, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" AcceptsReturn="True" TextWrapping="Wrap" VerticalScrollBarVisibility="Visible" ></TextBox>
        </Grid>
        <!-- ReSharper disable once Xaml.PossibleNullReferenceException -->
        <Border Grid.Row="1" Grid.Column="1" BorderBrush="DarkGray" BorderThickness="1">
            <Grid Grid.IsSharedSizeScope="True">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" FontWeight="Bold" HorizontalAlignment="Center" Margin="0 5">Eingabeprotokoll</TextBlock>
                    <ScrollViewer Grid.Row="1" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                        <ItemsControl ItemsSource="{Binding GivenProtokol.Entrys}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Vertical"></StackPanel>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="{x:Type viewModels1:ProtokolEntryViewModel}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="25" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Text="{Binding Num}" HorizontalAlignment="Center" TextAlignment="Center"></TextBlock>
                                        <ItemsControl Grid.Column="1" ItemsSource="{Binding VarEntrys}">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <Grid ShowGridLines="False" helper:GridHelpers.ColumnCount="8" ></Grid>
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                            <ItemsControl.ItemContainerStyle>
                                                <Style TargetType="ContentPresenter">
                                                    <Setter Property="Grid.Column" Value="{Binding Index}" />
                                                </Style>
                                            </ItemsControl.ItemContainerStyle>
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Horizontal" Grid.Column="3" Margin="5 0" >
                                                        <TextBlock Text="{Binding Name}"></TextBlock>
                                                        <TextBlock Text="="></TextBlock>
                                                        <TextBox Text="{Binding Value, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True, ValidatesOnDataErrors=True}" Width="50">
                                                            <TextBox.Style>
                                                                <Style TargetType="{x:Type TextBox}">
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding ValueCheck}" Value="true">
                                                                            <Setter Property="Background" Value="Green"></Setter>
                                                                            <Setter Property="Foreground" Value="White"></Setter>
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding Corrected}" Value="true">
                                                                            <Setter Property="Background" Value="LightGreen"></Setter>
                                                                            <Setter Property="Foreground" Value="Black"></Setter>
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding AbsCorrectedValue}" Value="true">
                                                                            <Setter Property="Background" Value="LightBlue"></Setter>
                                                                            <Setter Property="Foreground" Value="Black"></Setter>
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding ValueCheck}" Value="false">
                                                                            <Setter Property="Background" Value="Red"></Setter>
                                                                            <Setter Property="Foreground" Value="White"></Setter>
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding FailedToInclude}" Value="true">
                                                                            <Setter Property="Background" Value="MediumPurple"></Setter>
                                                                            <Setter Property="Foreground" Value="White"></Setter>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </TextBox.Style>
                                                        </TextBox>
                                                        <TextBlock Text=" "></TextBlock>
                                                        <TextBlock Padding="3" Text="{Binding Type, StringFormat={} ({0})}" Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.CurrentConfig.NeedTypes, Converter={StaticResource B2v}}">
                                                            <TextBlock.Style>
                                                                <Style TargetType="{x:Type TextBlock}">
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding TypeCheck}" Value="true">
                                                                            <Setter Property="Background" Value="Green"></Setter>
                                                                            <Setter Property="Foreground" Value="White"></Setter>
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding Corrected}" Value="true">
                                                                            <Setter Property="Background" Value="LightGreen"></Setter>
                                                                            <Setter Property="Foreground" Value="Black"></Setter>
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding AbsCorrectedType}" Value="true">
                                                                            <Setter Property="Background" Value="LightBlue"></Setter>
                                                                            <Setter Property="Foreground" Value="Black"></Setter>
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding TypeCheck}" Value="false">
                                                                            <Setter Property="Background" Value="Red"></Setter>
                                                                            <Setter Property="Foreground" Value="White"></Setter>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </TextBlock.Style></TextBlock>
                                                        <TextBlock VerticalAlignment="Center" Visibility="{Binding GotPoint, Converter={StaticResource B2v}}" Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.CurrentConfig.PointForMatch, StringFormat={}+{0}}"></TextBlock>
                                                    </StackPanel>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>
                    <StackPanel Grid.Row="2" Orientation="Horizontal">
                        <Label FontWeight="Bold" FontSize="16">Punkte:</Label>
                        <TextBlock FontWeight="Bold" FontSize="16" Text="{Binding GivenProtokol.Points}" VerticalAlignment="Center"></TextBlock>
                    </StackPanel>
                </Grid>
                <Separator Grid.Row="1" VerticalAlignment="Top"></Separator>
                <Grid Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0.2*" />
                        <RowDefinition />
                        <RowDefinition Height="0.2*"/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" FontWeight="Bold" HorizontalAlignment="Center" Margin="0 5">Lösung</TextBlock>
                    <ScrollViewer Grid.Row="1" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                        <ItemsControl ItemsSource="{Binding CalcedSolution.Entrys}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Vertical"></StackPanel>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="{x:Type viewModels1:ProtokolEntryViewModel}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="25" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Text="{Binding Num}" HorizontalAlignment="Center" TextAlignment="Center"></TextBlock>
                                        <ItemsControl Grid.Column="1" ItemsSource="{Binding VarEntrys}">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <Grid ShowGridLines="False" helper:GridHelpers.ColumnCount="8" ></Grid>
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                            <ItemsControl.ItemContainerStyle>
                                                <Style TargetType="ContentPresenter">
                                                    <Setter Property="Grid.Column" Value="{Binding Index}" />
                                                </Style>
                                            </ItemsControl.ItemContainerStyle>
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Horizontal" Grid.Column="3" Margin="5 0" >
                                                        <TextBlock Text="{Binding Name}"></TextBlock>
                                                        <TextBlock Text="="></TextBlock>
                                                        <TextBlock Text="{Binding Value}"></TextBlock>
                                                        <TextBlock Text="{Binding SecondValue, StringFormat={} \'{0}\'}">
                                                            <TextBlock.Style>
                                                                <Style TargetType="{x:Type TextBlock}">
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding SecondValue}" Value="">
                                                                            <Setter Property="Visibility" Value="Hidden"></Setter>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </TextBlock.Style>
                                                        </TextBlock>
                                                        <TextBlock Text=" "></TextBlock>
                                                        <TextBlock Text="{Binding Type, StringFormat={} ({0})}" Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.CurrentConfig.NeedTypes, Converter={StaticResource B2v}}"></TextBlock>
                                                    </StackPanel>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>
                    <Button Grid.Row="2" Margin="1,1,1,1"  Command="{Binding CalcNewSolutionCommand}" Grid.RowSpan="2">Lösung anzeigen</Button>

                </Grid>
            </Grid>
        </Border>
        <Grid Grid.Row="1" Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="35" />
                <RowDefinition Height="35" />
                <RowDefinition Height="35" />
                <RowDefinition Height="35" />
                <RowDefinition Height="35" />
                <RowDefinition Height="45" />
                <RowDefinition Height="35" />
                <RowDefinition Height="45" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <CheckBox Grid.Row="0" VerticalContentAlignment="Center" IsChecked="{Binding CurrentConfig.NeedTypes, Mode=TwoWay}">Typen gebraucht? / Check Types?</CheckBox>
            <StackPanel Grid.Row="1" Orientation="Horizontal">
                <Label>Punkte pro Match:</Label>
                <TextBox Text="{Binding CurrentConfig.PointForMatch, Mode=TwoWay}" Width="50" VerticalAlignment="Center"></TextBox>
            </StackPanel>
            <TextBlock Grid.Row="2" Background="Black" Foreground="White" VerticalAlignment="Center">Farbschema</TextBlock>
            <TextBlock Grid.Row="3" Background="Green" Foreground="White" VerticalAlignment="Center">korrekt</TextBlock>
            <TextBlock Grid.Row="4" Background="LightGreen" Foreground="Black" VerticalAlignment="Center" TextWrapping="Wrap">korrekt durch vorhergehende Korrektur</TextBlock>
            <TextBlock Grid.Row="5" Background="LightBlue" Foreground="Black" VerticalAlignment="Center" TextWrapping="Wrap">Rückfindung auf korrekte Lösung (nur dann ein Punkt, wenn Typ und Wert zurückgefunden)</TextBlock>
            <TextBlock Grid.Row="6" Background="Red" Foreground="White" VerticalAlignment="Center">falsch</TextBlock>
            <TextBlock Grid.Row="7" Background="MediumPurple" Foreground="White" VerticalAlignment="Center" TextWrapping="Wrap">nicht inkludierbar (Wert kann nicht in notwendigen Typ konvertiert werden)</TextBlock>
        </Grid>

    </Grid>
</Window>
